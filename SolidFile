// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract SolidFile {
    uint256 public count;
    mapping(uint256 => bool) public uniqueValues;

    event CountIncremented(uint256 newCount);

    constructor() {
        count = 0;
    }

    function incrementCount(uint256 _value) external {
        require(!uniqueValues[_value], "Value is not unique");
        assert(_value > count);
        uniqueValues[_value] = true;
        count = _value;
        emit CountIncremented(_value);
    }

    function revertTransaction() pure external {
        revert("Transaction intentionally reverted");
    }
}
